{"version":3,"sources":["./src/app/components/views/login/login.component.ts","./src/environments/environment.ts","./src/app/components/modal/delete/delete.component.ts","./src/app/components/modal/delete/delete.component.html","./src/app/services/address.service.ts","./src/app/services/client.service.ts","./src/app/components/template/footer/footer.component.ts","./src/app/components/template/footer/footer.component.html","./src/app/components/modal/main-address/main-address.component.ts","./src/app/components/modal/main-address/main-address.component.html","./src/app/components/views/home/home.component.ts","./src/app/components/views/home/home.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/client/client-create/client-create.component.ts","./src/app/components/client/client-create/client-create.component.html","./src/app/app.module.ts","./src/app/services/main.service.ts","./src/app/directives/red.directive.ts","./src/app/services/phone.service.ts","./src/app/components/client/client-detail/client-detail.component.ts","./src/app/components/client/client-detail/client-detail.component.html","./src/app/components/template/header/header.component.ts","./src/app/components/template/header/header.component.html","./src/app/components/modal/add-phone/add-phone.component.ts","./src/app/components/modal/add-phone/add-phone.component.html","./src/app/components/modal/add-address/add-address.component.ts","./src/app/components/modal/add-address/add-address.component.html","./src/app/pipes/phone.pipe.ts","./src/app/app-routing.module.ts","./src/app/pipes/cpf.pipe.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { ClientService } from './../../../services/client.service';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-delete',\n  templateUrl: './delete.component.html',\n  styleUrls: ['./delete.component.css']\n})\nexport class DeleteComponent implements OnInit {\n\n  @Input()\n  reload: any;\n  client_id: number;\n  \n  constructor(public activeModal: NgbActiveModal, private clientService: ClientService) { }\n\n  ngOnInit(): void {\n  }\n\n  delete(){\n    this.clientService.delete(this.client_id).subscribe(()=>{\n      this.activeModal.close('Close click');\n      this.reload();\n    });\n  }\n\n}\n","<div class=\"modal-header\">\n    <h4 class=\"modal-title\">Excluir Cliente?</h4>\n</div>\n<div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"activeModal.close('Close click')\">\n        Cancelar\n    </button>\n    <button mat-raised-button color=\"warn\" (click)=\"delete()\">\n        Excluir\n    </button>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { MainService } from './main.service';\nimport { Address } from 'src/app/models/address.model';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AddressService extends MainService{\n\n  constructor(private http: HttpClient) {\n    super();\n  }\n\n  create(addr: Address): Observable<Address> {\n    return this.http.post<Address>(this.baseUrl+'/address', addr).pipe(\n      map(obj => obj),\n      catchError(e => this.errorHandler(e))\n    )\n  }\n\n  update(addr: Address): Observable<Address> {\n    return this.http.put<Address>(this.baseUrl+`/address/${addr.id}`, addr).pipe(\n      map(obj => obj),\n      catchError(e => this.errorHandler(e))\n    )\n  }\n}\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Client } from '../models/client.model';\nimport { catchError, map } from 'rxjs/operators';\nimport { EMPTY } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientService {\n\n  baseUrl = 'http://localhost:8080';\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  create(client: Client): Observable<Client> {\n    return this.http.post<Client>(this.baseUrl+'/client', client).pipe(\n      map(obj => obj),\n      catchError(e => this.errorHandler(e))\n    )\n  }\n\n  read(): Observable<Client[]> {\n    return this.http.get<Client[]>(this.baseUrl+'/client').pipe(\n      map(obj => obj),\n      catchError(e => this.errorHandler(e))\n    );\n  }\n\n  readById(id: string): Observable<Client>{\n    return this.http.get<Client>(this.baseUrl+'/client/'+id).pipe(\n      map(obj => obj),\n      catchError(e => this.errorHandler(e))\n    );\n  }\n\n  delete(id: number): Observable<Client> {\n    const url = `${this.baseUrl}/client/${id}`\n    return this.http.delete<Client>(url).pipe(\n      map(obj => obj),\n      catchError(e => this.errorHandler(e))\n    )\n  }\n\n  errorHandler(e: any): Observable<any> {\n    if(e.status = 400){\n      \n    }\n    return EMPTY\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar class=\"footer\">\n    <span>\n        Desenvolvido por:       \n        <strong><span appRed>Andre Olive</span></strong>\n    </span>\n</mat-toolbar>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { AddressService } from 'src/app/services/address.service';\n\n@Component({\n  selector: 'app-main-address',\n  templateUrl: './main-address.component.html',\n  styleUrls: ['./main-address.component.css']\n})\nexport class MainAddressComponent implements OnInit {\n\n  @Input() \n  id: string;\n  confirmAction;\n  cancelAction;\n  constructor(\n    public activeModal: NgbActiveModal, \n    private addressService: AddressService\n    ) { }\n\n  ngOnInit(): void {\n  }\n\n  confirm(){\n    this.activeModal.close('Close click');\n    this.confirmAction();\n  }\n\n  cancel(){\n    this.activeModal.close('Close click');\n    this.cancelAction();\n  }\n}\n","<div class=\"modal-header\">\n    <h4 class=\"modal-title\">Tornar esse Endereço Principal?</h4>\n</div>\n<div class=\"modal-body\">\n    \n</div>\n<div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"activeModal.close('Close click')\">\n        Não\n    </button>\n    <button mat-raised-button color=\"primary\" (click)=\"confirm()\">\n        Sim\n    </button>\n</div>\n","import { DeleteComponent } from './../../modal/delete/delete.component';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ClientService } from './../../../services/client.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Client } from 'src/app/models/client.model';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  clients: Client[];\n  constructor(\n    private router: Router, \n    private clientService: ClientService,\n    private modalService: NgbModal\n    ) { }\n\n  ngOnInit(): void {\n    this.getData();\n  }\n\n  getData(){\n  this.clientService.read().subscribe(clients => {\n    this.clients = clients\n    console.log(this.clients)\n  })\n  }\n\n  navigateToProductCreate(): void {\n    this.router.navigate(['/client/create'])\n  }\n\n  deleteClient(id: number) {\n    const modalRef = this.modalService.open(DeleteComponent);\n    modalRef.componentInstance.client_id = id;\n    modalRef.componentInstance.reload = () => {this.getData()};;\n  }\n\n}\n","<div class='corpo'>\n<button mat-raised-button (click)=\"navigateToProductCreate()\" color=\"primary\">\n    Novo Cliente\n</button>\n\n<table class=\"table table-striped\">\n    <thead>\n        <tr>\n            <th scope=\"col\">#id</th>\n            <th scope=\"col\">Nome</th>\n            <th scope=\"col\">cpf</th>\n            <th scope=\"col\">telefone</th>\n            <th scope=\"col\">#</th>\n\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let client of clients; index as i\">\n            <th scope=\"row\">{{ client.id }}</th>\n            <td>\n                <a routerLink=\"/client/detail/{{ client.id }}\">{{ client.nome }}</a>\n            </td>\n            <td>{{ client.cpf | cpf }}</td>\n            <td *ngIf=\"client.phones[0]\">{{ client.phones[0].number | phone }}</td>\n            <td *ngIf=\"!client.phones[0]\">Sem Número Cadastrado</td>\n            <td>\n                <a (click)=\"deleteClient(client.id)\">\n                <i class=\"material-icons delete\" >\n                    delete\n                </i>\n                </a>\n            </td>\n        </tr>\n    </tbody>\n</table>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'betha-app';\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>\n<app-footer></app-footer>","import { Client } from 'src/app/models/client.model';\nimport { ClientService } from './../../../services/client.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Phone } from 'src/app/models/phone.model';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { AddPhoneComponent } from '../../modal/add-phone/add-phone.component';\nimport { AddAddressComponent } from '../../modal/add-address/add-address.component';\nimport { Address } from 'src/app/models/address.model';\n\ninterface Alert {\n  type: string;\n  message: string;\n}\n\nconst ALERTS: Alert[] = [{\n  type: 'success',\n  message: 'This is an success alert',\n}\n];\n\n@Component({\n  selector: 'app-client-create',\n  templateUrl: './client-create.component.html',\n  styleUrls: ['./client-create.component.css']\n})\nexport class ClientCreateComponent implements OnInit {\n\n  client: Client = {\n    id: null,\n    nome: null,\n    cpf: null,\n    cnpj: null,\n    user: 1, //hard coded\n    enderecos: [],\n    phones: []\n  }\n\n  alerts: Alert[] = [];\n\n  \n\n  constructor(\n    private clientService: ClientService, \n    private route: ActivatedRoute,\n    private router: Router,\n    private modalService: NgbModal\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  createClient(): void{\n    this.clientService.create(this.client).subscribe((client)=>{\n      this.router.navigate(['/']);\n    });\n  }\n\n  addPhoneToNewClient(phone: Phone){\n    this.client.phones.push(phone);\n  }\n\n  addAddressToNewClient(addr: Address){\n    this.client.enderecos.push(addr);\n    console.log(this.client)\n  }\n\n  openPhoneModal() {\n    const modalRef = this.modalService.open(AddPhoneComponent);\n    modalRef.componentInstance.function = (phone: Phone) => this.addPhoneToNewClient(phone);\n    modalRef.componentInstance.edit = false;\n  }\n\n  openAddressModal() {\n    const modalRef = this.modalService.open(AddAddressComponent);\n    modalRef.componentInstance.function = (addr: Address) => this.addAddressToNewClient(addr);\n    modalRef.componentInstance.edit = false;\n  }\n\n  cancel(): void {\n    this.router.navigate(['/'])\n  }\n\n  close(alert: Alert) {\n    this.alerts.splice(this.alerts.indexOf(alert), 1);\n  }\n\n}\n","<div class='corpo'>\n<mat-card>\n    <mat-card-title>Criar novo Cliente</mat-card-title>\n    <p *ngFor=\"let alert of alerts\">\n        <ngb-alert [type]=\"alert.type\" (closed)=\"close(alert)\">{{ alert.message }}</ngb-alert>\n    </p>\n    <form>\n        <mat-form-field class=\"inputArea\">\n            <input matInput placeholder=\"Nome\" [(ngModel)]=\"client.nome\" name=\"nome\">\n        </mat-form-field>\n        <mat-form-field class=\"inputArea\">\n            <input matInput placeholder=\"CPF\" [(ngModel)]=\"client.cpf\" name=\"cpf\">\n        </mat-form-field>\n        <mat-form-field class=\"inputArea\">\n            <input matInput placeholder=\"CNPJ\" [(ngModel)]=\"client.cnpj\" name=\"cnpj\">\n        </mat-form-field>\n        <ngb-accordion #acc=\"ngbAccordion\" activeIds=\"config-panel-one\">\n            <ngb-panel title=\"Telefones\" id=\"config-panel-one\">\n                <ng-template ngbPanelContent>\n                    <table class=\"table table-striped\" *ngIf=\"client.phones.length > 0\">\n                        <thead>\n                            <tr>\n                                <th scope=\"col\">Número</th>\n                                <th scope=\"col\">Descrição</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let phone of client.phones;\">\n                                <td>{{ phone.number | phone }}</td>\n                                <td>{{ phone.info }}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    <button mat-raised-button color=\"primary\" (click)=\"openPhoneModal()\">\n                        Adicionar Número\n                    </button>\n                </ng-template>\n            </ngb-panel>\n            <ngb-panel title=\"Endereços\">\n                <ng-template ngbPanelContent>\n                    <table class=\"table table-striped\" *ngIf=\"client.enderecos.length > 0\">\n                        <thead>\n                            <tr>\n                                <th scope=\"col\">Rua</th>\n                                <th scope=\"col\">Bairro</th>\n                                <th scope=\"col\">Cidade</th>\n                                <th scope=\"col\">Estado</th>\n                                <th scope=\"col\">CEP</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let endereco of client.enderecos;\">\n                                <td>{{ endereco.rua }}</td>\n                                <td>{{ endereco.bairro }}</td>\n                                <td>{{ endereco.cidade }}</td>\n                                <td>{{ endereco.estado }}</td>\n                                <td>{{ endereco.cep }}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    <button mat-raised-button color=\"primary\" (click)=\"openAddressModal()\">\n                        Adicionar Endereço\n                    </button>\n                </ng-template>\n            </ngb-panel>\n        </ngb-accordion>\n    </form>\n</mat-card>\n<button mat-raised-button color=\"primary\" (click)=\"createClient()\">\n    Salvar\n</button>\n<button mat-raised-button (click)=\"cancel()\">\n    Cancelar\n</button>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './components/template/header/header.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { FooterComponent } from './components/template/footer/footer.component';\nimport { RedDirective } from './directives/red.directive';\nimport { HomeComponent } from './components/views/home/home.component';\nimport { ClientCreateComponent } from './components/client/client-create/client-create.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CpfPipe } from './pipes/cpf.pipe';\nimport { PhonePipe } from './pipes/phone.pipe';\nimport { ClientDetailComponent } from './components/client/client-detail/client-detail.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { FormsModule } from '@angular/forms';\nimport { AddPhoneComponent } from './components/modal/add-phone/add-phone.component';\nimport { AddAddressComponent } from './components/modal/add-address/add-address.component';\nimport { DeleteComponent } from './components/modal/delete/delete.component';\nimport { LoginComponent } from './components/views/login/login.component';\nimport { MainAddressComponent } from './components/modal/main-address/main-address.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    RedDirective,\n    HomeComponent,\n    ClientCreateComponent,\n    CpfPipe,\n    PhonePipe,\n    ClientDetailComponent,\n    AddPhoneComponent,\n    AddAddressComponent,\n    DeleteComponent,\n    LoginComponent,\n    MainAddressComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    HttpClientModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatCardModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { EMPTY } from 'rxjs';\n\nexport class MainService {\n\n  baseUrl = 'http://localhost:8080';\n\n  constructor() {\n  }\n\n  errorHandler(e: any): Observable<any> {\n    return EMPTY\n  }\n}\n","import { Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[appRed]'\n})\nexport class RedDirective {\n\n  constructor(private el: ElementRef) {\n    el.nativeElement.style.color = '#e35e6b'\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Phone } from '../models/phone.model';\nimport { catchError, map } from 'rxjs/operators';\nimport { EMPTY } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PhoneService {\n\n  baseUrl = 'http://localhost:8080';\n\n  constructor(private http: HttpClient) { }\n\n  create(phone: Phone): Observable<Phone> {\n    return this.http.post<Phone>(this.baseUrl+'/phone', phone).pipe(\n      map(obj => obj),\n      catchError(e => this.errorHandler(e))\n    )\n  }\n\n  errorHandler(e: any): Observable<any> {\n    console.log(e)\n    return EMPTY\n  }\n  }\n","import { AddressService } from './../../../services/address.service';\nimport { AddAddressComponent } from './../../modal/add-address/add-address.component';\nimport { ClientService } from './../../../services/client.service';\nimport { Client } from 'src/app/models/client.model';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { AddPhoneComponent } from '../../modal/add-phone/add-phone.component'\nimport { MainAddressComponent } from '../../modal/main-address/main-address.component';\nimport { Address } from 'src/app/models/address.model';\n\n@Component({\n  selector: 'app-client-detail',\n  templateUrl: './client-detail.component.html',\n  styleUrls: ['./client-detail.component.css']\n})\nexport class ClientDetailComponent implements OnInit {\n\n  client: Client\n  locked: boolean = true;\n  mainId = null;\n  public isCollapsed = true;\n\n  constructor(\n    private clientService: ClientService, \n    private route: ActivatedRoute,\n    private router: Router,\n    private modalService: NgbModal,\n    private addressService: AddressService\n    ) { }\n\n  ngOnInit(): void {\n    this.getData()\n  }\n\n  checkMainAddress(){\n    this.client.enderecos.forEach(endereco => {\n      endereco.main ? this.mainId = endereco.id : null;\n      console.log(endereco.main, endereco.id)\n    })\n    \n  }\n\n  getData(){\n    const id = this.route.snapshot.paramMap.get('id')\n    this.clientService.readById(id).subscribe(client => {\n      this.client = client;\n      this.checkMainAddress();\n    })\n  }\n\n  deleteClient(): void{\n    this.clientService.delete(this.client.id).subscribe(()=>{\n      this.router.navigate(['/'])\n    });\n  }\n\n  lockAndUnlockFields(){\n    this.locked = !this.locked;\n  }\n\n  cancel(): void {\n    this.router.navigate(['/'])\n  }\n\n  addPhone() {\n    const modalRef = this.modalService.open(AddPhoneComponent);\n    modalRef.componentInstance.reload = () => {this.getData()};\n    modalRef.componentInstance.id = this.route.snapshot.paramMap.get('id');\n    modalRef.componentInstance.edit = true;\n  }\n\n  addAddress() {\n    const modalRef = this.modalService.open(AddAddressComponent);\n    modalRef.componentInstance.reload = () => {this.getData()};\n    modalRef.componentInstance.id = this.route.snapshot.paramMap.get('id');\n    modalRef.componentInstance.edit = true;\n  }\n\n  resetAllMainAddress(){\n    this.client.enderecos.forEach(endereco => {\n      endereco.main=false;\n    })\n  }\n\n  setMainAddress(addr: Address){\n    const modalRef = this.modalService.open(MainAddressComponent);\n    modalRef.componentInstance.id = addr.id;\n    modalRef.componentInstance.confirmAction = () => {\n      this.mainId = addr.id;\n      this.resetAllMainAddress();\n      let index = this.client.enderecos.indexOf(addr);\n      this.client.enderecos[index].main = true;\n      this.addressService.update(this.client.enderecos[index]).subscribe(()=>{\n        alert(\"endereço principal alterado!\")\n      });\n    }\n    modalRef.componentInstance.cancelAction = () => {this.mainId = this.mainId}\n  }\n\n  \n}\n","<div class='corpo'>\n<mat-card>\n    <mat-card-title>Detalhes do Cliente</mat-card-title>\n    <form *ngIf=\"client\">\n        <mat-form-field class=\"inputArea\">\n            <input matInput placeholder=\"Nome\" [value]=\"client.nome\" name=\"nome\" disabled=\"{{locked}}\">\n        </mat-form-field>\n        <mat-form-field *ngIf=\"client.cpf\" class=\"inputArea\">\n            <input matInput placeholder=\"CPF\" [value]=\"client.cpf | cpf\" name=\"cpf\" disabled=\"{{locked}}\">\n        </mat-form-field>\n        <mat-form-field *ngIf=\"client.cnpj\" class=\"inputArea\">\n            <input matInput placeholder=\"CNPJ\" [value]=\"client.cnpj | cpf\" name=\"cnpj\" disabled=\"{{locked}}\">\n        </mat-form-field>\n        <ngb-accordion #acc=\"ngbAccordion\" activeIds=\"config-panel-one\">\n            <ngb-panel title=\"Telefones\" id=\"config-panel-one\">\n                <ng-template ngbPanelContent>\n                    <table class=\"table table-striped\" *ngIf=\"client.phones.length > 0\">\n                        <thead>\n                            <tr>\n                                <th scope=\"col\">Número</th>\n                                <th scope=\"col\">Descrição</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let phone of client.phones;\">\n                                <td>{{ phone.number | phone }}</td>\n                                <td>{{ phone.info }}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    <button mat-raised-button color=\"primary\" (click)=\"addPhone()\">\n                        Adicionar Número\n                    </button>\n                </ng-template>\n            </ngb-panel>\n            <ngb-panel title=\"Endereços\">\n                <ng-template ngbPanelContent>\n                    <table class=\"table table-striped\" *ngIf=\"client.enderecos.length > 0\">\n                        <thead>\n                            <tr>\n                                <th scope=\"col\">Rua</th>\n                                <th scope=\"col\">Bairro</th>\n                                <th scope=\"col\">Cidade</th>\n                                <th scope=\"col\">Estado</th>\n                                <th scope=\"col\">CEP</th>\n                                <th scope=\"col\">Pricipal</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let endereco of client.enderecos;\">\n                                <td>{{ endereco.rua }}</td>\n                                <td>{{ endereco.bairro }}</td>\n                                <td>{{ endereco.cidade }}</td>\n                                <td>{{ endereco.estado }}</td>\n                                <td>{{ endereco.cep }}</td>\n                                <td><input type=\"checkbox\" \n                                    id=\"{{endereco.id}}\" \n                                    [checked]=\"endereco.id === mainId\"\n                                    (click)=\"setMainAddress(endereco)\"\n                                    [disabled]=\"endereco.id === mainId\"\n                                    >\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    <button mat-raised-button color=\"primary\" (click)=\"addAddress()\">\n                        Adicionar Endereço\n                    </button>\n                </ng-template>\n            </ngb-panel>\n        </ngb-accordion>\n    </form>\n</mat-card>\n<button mat-raised-button color=\"warn\" (click)=\"deleteClient()\">\n    Excluir\n</button>\n<button mat-raised-button (click)=\"cancel()\">\n    Voltar\n</button>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar class=\"header elevation-z4\">\nSistema de Cadastro de Clientes\n</mat-toolbar>\n","import { Component, Input } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Phone } from 'src/app/models/phone.model';\nimport { PhoneService } from 'src/app/services/phone.service';\n\n@Component({\n  selector: 'app-add-phone',\n  templateUrl: './add-phone.component.html',\n  styleUrls: ['./add-phone.component.css']\n})\nexport class AddPhoneComponent{\n\n  phone: Phone = {\n    id: null,\n    number: null,\n    info: null,\n    client: null,\n  }\n\n  @Input() \n  reload: any;\n  id: string;\n  edit: boolean;\n  function;\n\n  constructor(public activeModal: NgbActiveModal, private phoneService: PhoneService) {\n    console.log(this.id)\n  }\n\n  saveNumber(){\n    if(this.edit){\n    this.phone.client = parseInt(this.id);\n    this.phoneService.create(this.phone).subscribe(()=>{\n      this.activeModal.close('Close click');\n      this.reload();\n    });\n    }\n    else{\n      this.function(this.phone);\n      this.activeModal.close('Close click');\n    }\n  }\n\n}","<div class=\"modal-header\">\n    <h4 class=\"modal-title\">Adicionar um telefone</h4>\n</div>\n<div class=\"modal-body\">\n    <form>\n        <mat-form-field>\n            <input matInput placeholder=\"Número\" [(ngModel)]=\"phone.number\" name=\"numero\">\n        </mat-form-field>\n        <mat-form-field>\n            <input matInput placeholder=\"Descrição\" [(ngModel)]=\"phone.info\" name=\"desc\">\n        </mat-form-field>\n    </form>\n</div>\n<div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"activeModal.close('Close click')\">\n        Fechar\n    </button>\n    <button mat-raised-button color=\"primary\" (click)=\"saveNumber()\">\n        Adicionar\n    </button>\n</div>","import { AddressService } from './../../../services/address.service';\nimport { Component, Input } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Address } from 'src/app/models/address.model';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-add-address',\n  templateUrl: './add-address.component.html',\n  styleUrls: ['./add-address.component.css']\n})\nexport class AddAddressComponent{\n\n  address: Address = {\n    id: null,\n    rua: null,\n    bairro: null,\n    cidade: null,\n    estado: null,\n    cep: null,\n    main: false,\n    client: null\n}\n\n  @Input() \n  reload: any;\n  id: string;\n  edit: boolean;\n  function;\n\n  constructor(\n    public activeModal: NgbActiveModal, \n    private addressService: AddressService,\n    private route: ActivatedRoute\n    ) {\n      \n     }\n\n  saveAddress(){\n    \n      if(this.edit){\n      this.address.client = parseInt(this.id);\n        this.addressService.create(this.address).subscribe(()=>{\n          this.modalClose();\n          this.reload();\n        });\n      }\n      else{\n        this.function(this.address);\n        this.modalClose();\n      }\n    \n    \n  }\n\n  modalClose(){\n    this.activeModal.close('Close click');\n  }\n\n}\n","<div class=\"modal-header\">\n    <h4 class=\"modal-title\">Adicionar um Endereço</h4>\n</div>\n<div class=\"modal-body\">\n    <form>\n        <mat-form-field>\n            <input matInput placeholder=\"Rua\" [(ngModel)]=\"address.rua\" name=\"rua\">\n        </mat-form-field>\n        <mat-form-field>\n            <input matInput placeholder=\"Bairro\" [(ngModel)]=\"address.bairro\" name=\"bairro\">\n        </mat-form-field>\n        <mat-form-field>\n            <input matInput placeholder=\"Cidade\" [(ngModel)]=\"address.cidade\" name=\"cidade\">\n        </mat-form-field>\n        <mat-form-field>\n            <input matInput placeholder=\"Estado\" [(ngModel)]=\"address.estado\" name=\"estado\">\n        </mat-form-field>\n        <mat-form-field>\n            <input matInput placeholder=\"CEP\" [(ngModel)]=\"address.cep\" name=\"cep\">\n        </mat-form-field>\n    </form>\n</div>\n<div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"activeModal.close('Close click')\">\n        Fechar\n    </button>\n    <button mat-raised-button color=\"primary\" (click) = \"saveAddress()\">\n        Adicionar\n    </button>\n</div>\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'phone'\n})\nexport class PhonePipe implements PipeTransform {\n\n  transform(value: string): string {\n    let phone = value.replace(/\\D/g, \"\");\n    phone = phone.replace(/^0/, \"\");\n    if (phone.length > 10) {\n      phone = phone.replace(/^(\\d\\d)(\\d{5})(\\d{4}).*/, \"($1) $2-$3\");\n    } else if (phone.length > 5) {\n      phone = phone.replace(/^(\\d\\d)(\\d{4})(\\d{0,4}).*/, \"($1) $2-$3\");\n    } else if (phone.length > 2) {\n      phone = phone.replace(/^(\\d\\d)(\\d{0,5})/, \"($1) $2\");\n    } else {\n      phone = phone.replace(/^(\\d*)/, \"($1\");\n    }\n    return phone;\n  }\n\n}\n","import { ClientDetailComponent } from './components/client/client-detail/client-detail.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/views/home/home.component';\nimport { ClientCreateComponent } from './components/client/client-create/client-create.component'\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: HomeComponent\n  },\n  {\n    path: \"client/create\",\n    component: ClientCreateComponent\n  },\n  {\n    path: \"client/detail/:id\",\n    component: ClientDetailComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'cpf'\n})\nexport class CpfPipe implements PipeTransform {\n\n  transform(value: string): string {\n    if(value){\n    const cpf = value.replace(/[^\\d]/g, \"\");\n    return cpf.replace(/(\\d{3})(\\d{3})(\\d{3})(\\d{2})/, \"$1.$2.$3-$4\");\n    }\n    return \"\";\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}